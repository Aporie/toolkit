<?xml version="1.0" encoding="UTF-8" ?>

<project default="help">

    <!-- Import helper targets if called here directly. -->
    <if>
        <available file="help.xml" />
        <then>
            <import file="help.xml" />
        </then>
    </if>

   <!-- Install Composer dist dependencies for the subsite. -->
    <target name="dist-composer-install">
        <echo msg="Run 'composer install --no-dev' in the build destination folder." />
        <composer command="install" composer="${composer.bin}">
            <arg value="--working-dir=${dist.build.dir}" />
            <arg value="--no-interaction" />
            <arg value="--no-plugins" />
            <arg value="--no-suggest" />
            <arg value="--no-dev" />
            <arg value="--ansi" />
        </composer>
    </target>

    <!-- Copy project.resources into the build folder. -->
    <target name="dist-copy-resources">
        <echo msg="Copy custom resources." />
        <!-- Copy our custom modules. -->
        <phingcall target="copy-folder">
            <property name="copy.source.path" value="${project.resources.modules.dir}" />
            <property name="copy.destination.path" value="${dist.build.modules.custom.dir}" />
            <property name="copy.path.haltonerror" value="false" override="true"/>
        </phingcall>
        <!-- Copy our custom features. -->
        <phingcall target="copy-folder">
            <property name="copy.source.path" value="${project.resources.features.dir}" />
            <property name="copy.destination.path" value="${dist.build.modules.features.dir}" />
            <property name="copy.path.haltonerror" value="false" override="true"/>
        </phingcall>
        <!-- Copy our custom themes. -->
        <phingcall target="copy-folder">
            <property name="copy.source.path" value="${project.resources.themes.dir}" />
            <property name="copy.destination.path" value="${dist.build.themes.dir}" />
            <property name="copy.path.haltonerror" value="false" override="true"/>
        </phingcall>
        <!-- Copy our custom PSR-4 code. -->
        <phingcall target="copy-folder">
            <property name="copy.source.path" value="${project.resources.source.dir}" />
            <property name="copy.destination.path" value="${dist.build.source.dir}" />
            <property name="copy.path.haltonerror" value="false" override="true"/>
        </phingcall>
        <!-- Copy composer configuration. -->
        <copy todir="${dist.build.dir}" file="${project.resources.composer.json}" />
        <copy todir="${dist.build.dir}" file="${project.resources.composer.lock}" />
    </target>

    <!-- Delete the previous distribution build. -->
    <target name="dist-delete">
        <echo msg="Delete previous build." />
        <phingcall target="delete-folder">
            <property name="folder.to.delete" value="${dist.build.dir}" />
        </phingcall>
    </target>

    <!-- Make the distribution version of the subsite. -->
    <target name="dist-make">
        <echo msg="Delete temporary build folder." />
        <phingcall target="delete-folder">
            <property name="folder.to.delete" value="${phing.subsite.tmp.dir}/build" />
        </phingcall>

        <echo msg="Make the subsite." />
        <!--
            Drush make builds the site as if it is part of a complete Drupal
            installation. The actual build is in the /sites/all subfolder. Build
            in a temporary folder and move the subsite into place when done.
         -->
        <if>
            <available file="${subsite.make}" type="file" />
            <then>
                <loadfile property="sitemake" file="${subsite.make}"/>
                <propertyregex
                    property="not.empty"
                    subject="${sitemake}"
                    pattern="([^#; ])(libraries\[|projects\[)"
                    match="$1"
                    casesensitive="false"
                    defaultvalue="empty"/>
                <if>
                    <not><equals arg1="${not.empty}" arg2="empty" /></not>
                    <then>
                        <phingcall target="drush-make-no-core">
                            <property name="drush.make.target.file" value="${subsite.make}" />
                            <property name="drush.make.root" value="${phing.subsite.tmp.dir}/build" />
                        </phingcall>
                    </then>
                    <else>
                       <echo msg="Empty make file found. Skipping... ${not.empty}" />
                       <mkdir dir="${phing.subsite.tmp.dir}/build/sites/all" />
                    </else>
                </if>
            </then>
            <else>
                <echo msg="No make file found. Skipping..." />
                <mkdir dir="${phing.subsite.tmp.dir}/build/sites/all" />
            </else>
        </if>

        <!-- Move the subsite to its destination. -->
        <echo msg='mv "${phing.subsite.tmp.dir}/build/sites/all/" "${dist.build.dir}"' />
        <exec
            command='mv "${phing.subsite.tmp.dir}/build/sites/all/" "${dist.build.dir}"'
            dir="${project.basedir}"
            passthru="true"
            checkreturn="true"
        />

        <echo msg="Clean up temporary build folder." />
        <phingcall target="delete-folder">
            <property name="folder.to.delete" value="${phing.subsite.tmp.dir}/build" />
        </phingcall>
    </target>

</project>
