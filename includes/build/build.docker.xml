<?xml version="1.0" encoding="UTF-8" ?>
<project name="My subsite" default="help">

    <target name="start-container" description="Start docker container">
        <echo msg="Starting container for ${env.BUILD_ID_UNIQUE}" />
        <mkdir dir="${platform.build.dir}" /> 
        <mkdir dir="${share.platform.path}/databases/platform-dev-${platform.package.reference}" />
        <!-- <exec command="docker-compose -p ${env.BUILD_ID_UNIQUE} -f vendor/ec-europa/ssk/resources/docker/docker-compose.yml up -d" passthru="true" /> -->
        <exec command="DB_LOCATION_DIR=${share.platform.path}/databases/platform-dev-${platform.package.reference} docker-compose -p ${env.BUILD_ID_UNIQUE} -f vendor/ec-europa/ssk/resources/docker/docker-compose.yml -f load-db.yml up -d" passthru="true" />
    </target>

    <target name="stop-container" description="Stop docker container">
        <echo msg="Stopping container for ${env.BUILD_ID_UNIQUE}" />
        <exec command="docker-compose -p ${env.BUILD_ID_UNIQUE} -f vendor/ec-europa/ssk/resources/docker/docker-compose.yml down --rmi local --volumes" passthru="true" />
    </target>

    <target name="start-container-old" description="Start docker container">
        <echo msg='Starting container "${docker.container.name}".' />
        <exec command="docker run --name ${docker.container.name} -p 127.0.0.1:80:80 -v ${jenkins.workspace.dir}:/web -v${jenkins.cache.dir}:${jenkins.cache.dir} -w /web -d dev-server:latest" />
        <exec command="docker start ${docker.container.name}" />
        <!--<exec command="docker exec ${docker.container.name} while ! echo Ready for install. | nc ${drupal.db.host} ${drupal.db.port}; do echo Waiting for mysql...; sleep 2; done" /> -->
        <exec command="sleep 15" />
    </target>

    <target name="stop-container-old" description="Drop database, stop and remove container">
        <echo msg='Stopping container "${docker.container.name}".' />
        <exec command="docker exec ${docker.container.name} ./bin/phing drush-sql-drop" />
        <exec command="docker stop ${docker.container.name}; docker rm $(docker ps -aq)" />
    </target>

</project>
