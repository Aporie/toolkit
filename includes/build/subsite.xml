<?xml version="1.0" encoding="UTF-8" ?>

<project default="help">

    <!-- Import helper targets if called here directly. -->
    <if>
         <available file="help.xml" />
         <then>
             <import file="help.xml" />
         </then>
     </if>

    <!-- Create code base. -->
    <target
        name="build-subsite"
        description="Build a local version of a subsite NOT intended lor development." />

    <!-- Create code base. -->
    <target
        name="build-subsite-dev"
        description="Build local version of subsite without install."
        depends="
            subsite-site-backup,
            project-platform-delete,
            subsite-make-subsite,
            subsite-resources-link,
            project-subsite-composer-install,
            test-behat-setup-link,
            test-behat-setup,
            build-project-htaccess,
            test-phpcs-setup,
            subsite-modules-devel-dl,
            subsite-site-restore"
    />

    <!-- Install a development version of the subsite with a production database. -->
    <target
        name="build-subsite-dev-clone"
        description="Build local version of subsite with production data."
        depends="subsite-database-download,
            drush-regenerate-settings,
            subsite-database-import,
            subsite-modules-devel-en" />

    <!-- Create distribution code base. -->
    <target
        name="build-subsite-dist"
        description="Build files of subsite for release package."
        depends="
            subsite-dist-delete,
            subsite-dist-make,
            subsite-dist-resources-copy,
            subsite-dist-composer-install" />

    <target
        name="build-platform-dist-multisite"
        description="Build files of  platform intended for release package."
        depends="
            project-platform-delete,
            platform-make-drupal,
            platform-profiles-copy,
            platform-make-profile-all,
            platform-resources-copy,
            project-platform-composer-install" />

    <!-- Build code base with backup restore. -->
    <target name="build-subsite-dev-keep" description="Build local version of subsite with backup and restore.">
        <!-- Execute build-dev with automatic rebuild enabled. -->
        <phingcall target="build-subsite-dev">
            <property name="platform.rebuild.auto" value="1" override="true"/>
        </phingcall>
    </target>

    <!-- Install a development version of the subsite. -->
    <target
        name="build-subsite-dev-clean"
        description="Build local version of subsite with a clean install."
        depends="
            drush-create-files-dirs,
            build-project-install,
            subsite-modules-devel-en" />

    <!-- Make the development version of the subsite. -->
    <target name="subsite-make-subsite" depends="project-platform-package-download">
        <if>
            <available file="${subsite.make}" type="file" />
            <then>
                <echo msg="Make the subsite." />
                <phingcall target="drush-make-no-core">
                    <property name="drush.make.target.file" value="${subsite.make}" />
                    <property name="drush.make.root" value="${platform.build.dir}" />
                </phingcall>
            </then>
            <else>
                <echo msg="No make file found. Skipping..." />
            </else>
        </if>
    </target>


    <!-- Symlink the source folders for easy development. -->
    <target name="subsite-resources-link">
        <rel-sym link="${platform.build.subsite.modules.custom.dir}" target="${project.resources.modules.dir}" />
        <rel-sym link="${platform.build.subsite.modules.features.dir}" target="${project.resources.features.dir}" />
        <delete dir="${platform.build.subsite.themes.dir}" includeemptydirs="true" failonerror="false" />
        <rel-sym link="${platform.build.subsite.themes.dir}" target="${project.resources.themes.dir}" />
        <rel-sym link="${platform.build.subsite.source.dir}" target="${project.resources.source.dir}" />
        <rel-sym link="${platform.build.subsite.composer.json}" target="${project.resources.composer.json}" />
        <rel-sym link="${platform.build.subsite.composer.lock}" target="${project.resources.composer.lock}" />
    </target>

    <!-- Generate the makefile used to download development modules. -->
    <target name="subsite-modules-devel-mf">
        <echo msg="Generate the makefile for development modules." />
        <if>
            <available file="${subsite.temporary.development.make}" type="file" property="development.makefile.available" />
            <then>
                <echo message="Deleting existing makefile." />
                <delete file="${subsite.temporary.development.make}" failonerror="false" />
            </then>
        </if>
        <drushmf
            makeFile="${subsite.temporary.development.make}"
            coreVersion="${drupal.core.version}"
            projects="${development.modules.download}"
            defaultProjectDir="${development.modules.location}"
        />
    </target>

    <!-- Download development modules. -->
    <target name="subsite-modules-devel-dl" depends="subsite-modules-devel-mf">
        <echo msg="Download development modules." />
        <phingcall target="drush-make-no-core">
            <property name="drush.make.target.file" value="${subsite.temporary.development.make}" />
            <property name="drush.make.root" value="${platform.build.dir}" />
        </phingcall>
    </target>

    <!-- Enable required modules after installation of the profile. -->
    <target name="subsite-modules-install-en">
        <phingcall target="drush-enable-modules">
            <property name="drupal.modules" value="${subsite.install.modules}" />
        </phingcall>
    </target>

    <!-- Enable development modules. -->
    <target name="subsite-modules-devel-en">
        <phingcall target="drush-enable-modules">
            <property name="drupal.modules" value="${development.modules.enable}" />
        </phingcall>
    </target>

</project>
