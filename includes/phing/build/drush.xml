<?xml version="1.0" encoding="UTF-8" ?>

<project default="help">

    <!-- Import helper targets if called here directly. -->
    <if>
        <available file="help.xml" />
        <then>
            <import file="help.xml" />
        </then>
    </if>

    <!-- Install the site. -->
    <target name="drush-site-install">
        <echo message="Installing site ${subsite.name}." />
        <drush command="site-install" assume="yes" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}" color="${drush.color}">
            <option name="db-url" value="${project.drupal.db.url}" />
            <option name="site-name" value="'${subsite.name}'" />
            <option name="account-name" value="${project.admin.username}" />
            <option name="account-pass" value="${project.admin.password}" />
            <option name="account-mail" value="${project.admin.email}" />
            <param>${platform.package.profile}</param>
            <param>install_configure_form.update_status_module='array(FALSE,FALSE)'</param>
        </drush>
    </target>

    <!-- Enable modules. -->
    <target name="drush-enable-modules" hidden="true">
        <drush
            command="pm-enable"
            assume="yes"
            root="${project.build.platform.dir}"
            bin="${project.bin.drush}"
            verbose="${drush.verbose}"
            color="${drush.color}">
            <param>${project.drupal.modules}</param>
        </drush>
    </target>

    <!-- Create the directories. -->
    <target name="drush-create-files-dirs">
        <echo message="Creating files directories for ${project.drupal.db.name}." />
        <!-- Execute setttings generation script. -->
        <drush command="php-script" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}" color="${drush.color}">
            <param>${ssk.root}/includes/drush/generate-directories.php</param>
        </drush>
    </target>

    <!-- Create the database. -->
    <target name="drush-sql-create">
        <echo message="Creating database ${project.drupal.db.name}." />
        <drush command="sql-create" assume="yes" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}" color="${drush.color}">
            <option name="db-url" value="${project.drupal.db.url}" />
        </drush>
    </target>

    <!-- Import a database. -->
    <target name="drush-sql-import">
        <echo message="Importing database." />
        <drush command="sql-cli" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}" color="${drush.color}">
            <param>&lt; ${database-file}</param>
        </drush>
        <phingcall target="drush-registry-rebuild" />
        <phingcall target="drush-create-files-dirs" />
        <!-- Update database. -->
        <drush command="updatedb" assume="yes" root="${project.build.platform.dir}" bin="${project.bin.drush}"></drush>
        <!-- Clear Caches. -->
        <drush command="cc" assume="yes" root="${project.build.platform.dir}" bin="${project.bin.drush}">
            <param>all</param>
        </drush>
    </target>

    <!-- Drop the database. -->
    <target name="drush-sql-drop">
        <echo message="Dropping database ${project.drupal.db.name}." />
        <drush command="sql-drop" assume="yes" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}" color="${drush.color}">
            <option name="db-url" value="${project.drupal.db.url}" />
        </drush>
    </target>

    <!-- Backup the database. -->
    <target name="drush-sql-dump">
        <echo message="Backing up database ${project.drupal.db.name} to ${database-file}." />
        <dirname property="database-cachedir" file="${database-file}"/>
        <mkdir dir="${database-cachedir}" />
        <drush command="sql-dump" assume="yes" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}" color="${drush.color}">
            <option name="result-file" value="${database-file}" />
        </drush>
    </target>

    <!-- Activate solr if needed. -->
    <target name="drush-enable-solr">
        <if>
            <equals arg1="${project.solr.enablee}" arg2="1" />
            <then>
                <echo message="Enable apachesolr for ${project.drupal.db.name}." />
                <phingcall target="drush-enable-modules">
                    <property name="project.drupal.modules" value="apachesolr" />
                </phingcall>
                <drush command="solr-set-env-url" assume="yes" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}" color="${drush.color}">
                    <param>${project.solr.url}</param>
                </drush>
            </then>
        </if>
    </target>

    <!-- Execute a makefile with the no-core option. -->
    <target name="drush-make-no-core">
        <echo message="Running make file ${drush.make.target.file} into folder ${drush.make.root}." />
        <drush command="make" assume="yes" bin="${project.bin.drush}" pipe="yes" verbose="${drush.verbose}" root="${drush.make.root}" color="${drush.color}">
            <param>${drush.make.target.file}</param>
            <param>${drush.make.root}</param>
            <option name="concurrency">10</option>
            <option name="no-patch-txt"></option>
            <option name="no-core"></option>
        </drush>
    </target>

    <!-- Regenerate the settings file with database credentials and development variables. -->
    <target name="drush-regenerate-settings">

        <copy file="${ssk.root}/includes/drush/generate-settings.php" tofile="tmp/generate-settings.php" overwrite="true">
            <filterchain>
                <replacetokens begintoken="%%" endtoken="%%">
                    <!-- Replace tokens in settings generation script. -->
                    <token key="project.drupal.db.type" value="${project.drupal.db.type}" />
                    <token key="project.drupal.db.name" value="${project.drupal.db.name}" />
                    <token key="project.drupal.db.user" value="${project.drupal.db.user}" />
                    <token key="project.drupal.db.password" value="${project.drupal.db.password}" />
                    <token key="project.drupal.db.host" value="${project.drupal.db.host}" />
                    <token key="project.drupal.db.port" value="${project.drupal.db.port}" />
                    <token key="error_level" value="${devel.vars.error_level}" />
                    <token key="views_ui_show_sql_query" value="${devel.vars.views_ui_show_sql_query}" />
                    <token key="views_ui_show_performance_statistics" value="${devel.vars.views_ui_show_performance_statistics}" />
                    <token key="views_show_additional_queries" value="${devel.vars.views_show_additional_queries}" />
                    <token key="stage_file_proxy_origin" value="${devel.vars.stage_file_proxy_origin}" />
                    <token key="stage_file_proxy_origin_dir" value="${devel.vars.stage_file_proxy_origin_dir}" />
                    <token key="stage_file_proxy_hotlink" value="${devel.vars.stage_file_proxy_hotlink}" />
                    <token key="file_public_path" value="${project.build.files.dir}" />
                    <token key="file_private_path" value="${project.build.files.dir}/private_files" />
                    <token key="file_temporary_path" value="${project.build.tmp.dir}" />
                </replacetokens>
            </filterchain>
        </copy>
        <!-- Execute setttings generation script. -->
        <drush command="php-script" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}" color="${drush.color}">
            <param>tmp/generate-settings.php</param>
        </drush>
    </target>

    <!-- Rebuild registry. -->
    <target name="drush-registry-rebuild">
        <trycatch>
            <try>
                <!-- Check if registry rebuild is available. -->
                <exec command="${project.bin.drush} rr --help" checkreturn="true" />
            </try>
            <catch>
                <!-- Download if not available. -->
                <phingcall target="drush-dl-rr" />
            </catch>
            <finally>
                 <!-- Rebuild Registry. -->
                 <drush command="registry-rebuild" assume="yes" root="${project.build.platform.dir}" bin="${project.bin.drush}" verbose="${drush.verbose}">
                     <param>--fire-bazooka</param>
                 </drush>
            </finally>
        </trycatch>
    </target>

    <!-- Download registry rebuild. -->
    <target name="drush-dl-rr">
        <echo message="Installing registry rebuild on user account." />
        <exec command="${project.bin.drush} pm-download registry_rebuild-7 -n >/dev/null" />
        <exec command="${project.bin.drush} cc drush >/dev/null" />
    </target>

    <!-- Rebuild node access. -->
    <target name="drush-rebuild-node-access">
        <drush
            command="php-eval"
            assume="yes"
            root="${project.build.platform.dir}"
            bin="${project.bin.drush}"
            verbose="${drush.verbose}"
            color="${drush.color}">
            <param>"node_access_rebuild()"</param>
        </drush>
    </target>

</project>
