<?xml version="1.0" encoding="UTF-8" ?>

<project default="help">

    <!-- Import helper targets if called here directly. -->
    <if>
         <available file="help.xml" />
         <then>
             <import file="help.xml" />
         </then>
    </if>

    <!-- This step in future will become a part of a build on the new Europa theme repository. -->
    <target name="theme-europa-download-extract">
        <phingcall target="package-download-unpack">
            <property name="package-name" value="ec_europa-${platform.theme.ec_europa.version}.tar.gz" />
            <property name="package-cache-location" value="${project.tmp.dir}" />
            <property name="package-download-location" value=" https://github.com/ec-europa/ec_europa/releases/download/${platform.theme.ec_europa.version}" />
            <property name="package-extract-location" value="${project.resources.dir.lib}/themes/ec_europa" />
            <property name="package-extract-options" value="--strip=1" />
        </phingcall>
        <phingcall target="theme-europa-embed-ecl-assets" />
    </target>

    <target name="theme-europa-embed-ecl-assets">
        <phingcall target="package-download-unpack">
            <property name="package-name" value="framework.tar.gz" />
            <property name="package-cache-location" value="${project.tmp.dir}" />
            <property name="package-download-location" value="https://github.com/ec-europa/europa-component-library/releases/download/${platform.theme.ecl.version}" />
            <property name="package-extract-location" value="${project.resources.dir.lib}/themes/ec_europa/assets" />
            <property name="package-extract-options" value="--strip=1" />
        </phingcall>
    </target>

    <!-- Creates symlinks for the atomium and europa themes. -->
    <target name="theme-europa-create-symlinks" >
        <rel-sym link="${project.build.platform.dir.profile.themes}" overwrite="true">
            <fileset dir="${project.resources.dir.themes}" expandsymboliclinks="true">
                <include name="*" />
            </fileset>
        </rel-sym>
    </target>

    <!-- Cloning and checking out the branch of the Atomium and EC Europa theme repositories. -->
    <target name="theme-europa-repo-clone">
        <!-- Deleting theme directories before cloning -->
        <delete dir="${project.resources.dir.themes}/atomium" quiet="true"/>
        <delete dir="${project.resources.dir.themes}/ec_europa" quiet="true"/>

        <!-- Cloning the Atomium theme repo into the common profiles directory -->
        <echo msg = "Cloning the Atomium theme repository."/>
        <gitclone
            repository="${platform.theme.atomium.repo.url}"
            targetPath="${project.resources.dir.themes}/atomium"/>
        <!-- Checking out the configured branch in the cloned repo -->
        <gitcheckout
            repository="${project.resources.dir.themes}/atomium"
            branchname="${platform.theme.atomium.repo.branch}"/>

        <!-- cloning the EC Europa theme repo into the common profiles directory -->
        <echo msg = "Cloning the EC Europa theme repository."/>
        <gitclone
            repository="${platform.theme.europa.repo.url}"
            targetPath="${project.resources.dir.themes}/ec_europa"/>
        <!-- Checking out the configured branch in the cloned repo -->
        <gitcheckout
            repository="${project.resources.dir.themes}/ec_europa"
            branchname="${platform.theme.europa.repo.branch}"/>
    </target>

    <!-- Generating assets -->
    <target name="theme-europa-build">
        <exec
            command="npm install"
            passthru="true"
            dir="${project.resources.dir.themes}/ec_europa"
        />
        <exec
            command="npm run build"
            passthru="true"
            dir="${project.resources.dir.themes}/ec_europa"
        />
        <!-- Deleting *.map files (currently there is a bug in the ecl-builder) -->
        <delete>
            <fileset dir="${project.resources.dir.themes}/ec_europa/assets/css">
                <include name="*.map" />
            </fileset>
            <fileset dir="${project.resources.dir.themes}/ec_europa/wysiwyg">
                <include name="*.map" />
            </fileset>
        </delete>
    </target>
</project>
