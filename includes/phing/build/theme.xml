<?xml version="1.0" encoding="UTF-8" ?>

<project default="help">

    <!-- Import helper targets if called here directly. -->
    <if>
         <available file="help.xml" />
         <then>
             <import file="help.xml" />
         </then>
    </if>

    <!-- This step in future will become a part of a build on the new Europa theme repository. -->
    <target name="theme-europa-download-extract">
        <!-- Download the Europa theme archive for a given branch. -->
        <exec
            command="curl -L${project.curl.progress} https://github.com/ec-europa/ec_europa/releases/download/${ec_europa.version}/ec_europa-${ec_europa.version}.tar.gz > ${project.resources.dir.profiles}/common/themes/ec_europa.tar.gz"
            passthru="true" />
        <!-- Extract the archive -->
        <mkdir dir="${project.resources.dir.profiles}/common/themes/ec_europa" />
        <exec
            dir="${project.resources.dir.profiles}/common/themes"
            command="tar xzf ec_europa.tar.gz --strip=1 -C ec_europa"
            passthru="true" />
        <delete file="${project.resources.dir.profiles}/common/themes/ec_europa.tar.gz" quiet="true" />
        <phingcall target="theme-europa-embed-ecl-assets" />
    </target>

    <target name="theme-europa-embed-ecl-assets">
        <!-- Download the ECL release package. -->
        <exec
            command="curl -L${project.curl.progress} https://github.com/ec-europa/europa-component-library/releases/download/${ecl.version}/framework.tar.gz > ${project.resources.dir.profiles}/common/themes/ec_europa/framework.tar.gz"
            passthru="true" />
        <!-- Extract and embed the ECL artifacts into the Europa theme. -->
        <exec
            dir="${project.resources.dir.profiles}/common/themes/ec_europa"
            command="tar xzf framework.tar.gz --strip=1 -C assets"
            passthru="true" />
        <delete file="${project.resources.dir.profiles}/common/themes/ec_europa/framework.tar.gz" quiet="true" />
    </target>

    <!-- Creates symlinks for the atomium and europa themes. -->
    <target name="theme-europa-create-symlinks" >
        <rel-sym link="${project.resources.dir.lib}/${project.build.platform.profile}/themes" overwrite="true">
            <fileset dir="${project.resources.dir.profiles.common.themes}" expandsymboliclinks="true">
                <include name="ec_europa" />
            </fileset>
        </rel-sym>
    </target>

    <!-- Cloning and checking out the branch of the Atomium and EC Europa theme repositories. -->
    <target name="theme-europa-repo-clone">
        <!-- Deleting theme directories before cloning -->
        <delete dir="${project.resources.dir.profiles.common.themes}/atomium" quiet="true"/>
        <delete dir="${project.resources.dir.profiles.common.themes}/ec_europa" quiet="true"/>

        <!-- Cloning the Atomium theme repo into the common profiles directory -->
        <echo msg = "Cloning the Atomium theme repository."/>
        <gitclone
            repository="${platform.theme.atomium.repo.url}"
            targetPath="${project.resources.dir.profiles.common.themes}/atomium"/>
        <!-- Checking out the configured branch in the cloned repo -->
        <gitcheckout
            repository="${project.resources.dir.profiles.common.themes}/atomium"
            branchname="${platform.theme.atomium.repo.branch}"/>

        <!-- cloning the EC Europa theme repo into the common profiles directory -->
        <echo msg = "Cloning the EC Europa theme repository."/>
        <gitclone
            repository="${platform.theme.europa.repo.url}"
            targetPath="${project.resources.dir.profiles.common.themes}/ec_europa"/>
        <!-- Checking out the configured branch in the cloned repo -->
        <gitcheckout
            repository="${project.resources.dir.profiles.common.themes}/ec_europa"
            branchname="${platform.theme.europa.repo.branch}"/>
    </target>

    <!-- Generating assets -->
    <target name="theme-europa-build">
        <exec
            command="npm install"
            passthru="true"
            dir="${project.resources.dir.profiles.common.themes}/ec_europa"
        />
        <exec
            command="npm run build"
            passthru="true"
            dir="${project.resources.dir.profiles.common.themes}/ec_europa"
        />
        <!-- Deleting *.map files (currently there is a bug in the ecl-builder) -->
        <delete>
            <fileset dir="${project.resources.dir.profiles.common.themes}/ec_europa/assets/css">
                <include name="*.map" />
            </fileset>
            <fileset dir="${project.resources.dir.profiles.common.themes}/ec_europa/wysiwyg">
                <include name="*.map" />
            </fileset>
        </delete>
    </target>
</project>
