<?xml version="1.0" encoding="UTF-8" ?>

<project name="platform" description="Builds the platform if a profiles folder is detected." default="">

    <target name="build-dev" description="Build a local development version with a single platform profile."
        depends="
            project-subsite-backup,
            build-type-dev,
            build-delete,
            build-make-drupal,
            build-link-profiles,
            build-make-profiles,
            build-link-resources,
            build-theme-dev,
            project-platform-composer-no-dev,
            project-modules-devel-dl,
            project-platform-set-htaccess,
            project-subsite-restore,
            project-subsite-setup-files" />

    <target name="build-dev-all" description="Build a local development version with all platform profiles."
        depends="
            build-type-dev,
            build-delete,
            build-make-drupal,
            build-copy-profiles,
            build-make-profiles,
            build-copy-resources,
            project-platform-composer-no-dev" />

    <target name="build-dist" description="Build a single platform profile intended as a release package."
        depends="
            build-type-dist,
            build-delete,
            build-make-drupal,
            build-copy-profile,
            build-make-profile,
            build-copy-resources,
            project-platform-composer-no-dev" />

    <target name="build-dist-all" description="Build all platform profiles intended as a release package."
        depends="
            build-type-dist,
            build-delete,
            build-make-drupal,
            build-copy-profiles,
            build-make-profiles,
            build-copy-resources,
            project-platform-composer-no-dev" />

    <target name="build-test" description="Build a platform test package to test this release.">
        <phingcall target="build-project-test">
            <property name="dir-build" value="${tests.dir}" override="true" />
        </phingcall>
    </target>

    <target name="build-copy-profile" description="Copy single profile for distribution.">
        <delete dir="${build.${build-type}.dir.profiles}" includeemptydirs="true" failonerror="false" quiet="true" />
        <mkdir dir="${build.${build-type}.dir.profile}" />
        <copy todir="${build.${build-type}.dir.profile}">
            <fileset dir="${lib.dir.profiles.profile}" expandsymboliclinks="true">
                <exclude name="profiles/common/**" />
            </fileset>
        </copy>
    </target>

    <target name="build-copy-profiles" description="Copy all profiles for distribution.">
        <delete dir="${build.${build-type}.dir.profiles}" includeemptydirs="true" failonerror="true" quiet="true" />
        <copy todir="${build.${build-type}.dir.profiles}">
            <fileset dir="${lib.dir.profiles}" expandsymboliclinks="true">
                <exclude name="common/**" />
            </fileset>
        </copy>
    </target>

    <target name="build-copy-resources" description="Copy platform resources for distribution.">
        <copy todir="${build.${build-type}.dir}">
            <fileset dir="${resources.dir}">
                <include name="composer.*"></include>
                <include name="favicon.ico"></include>
            </fileset>
        </copy>
    </target>

    <target name="build-delete" description="Build a platform test package to test this release.">
        <phingcall target="project-scratch-build">
            <property name="dir-build" value="${build.${build-type}.dir}" override="true" />
        </phingcall>
    </target>

    <target name="build-link-profiles" description="Link platform profiles to lib folder for development.">
        <delete dir="${build.${build-type}.dir.profiles}" />
        <relsym link="${build.${build-type}.dir.profiles}" target="${lib.dir.profiles}" />
    </target>

    <target name="build-link-resources" description="Link platform resources to lib folder for development.">
        <relsym link="${build.${build-type}.dir}/composer.json" target="${resources.dir.composer.json}" />
        <relsym link="${build.${build-type}.dir}/composer.lock" target="${resources.dir.composer.lock}" />
        <relsym link="${build.${build-type}.dir}/.favicon.ico" target="${resources.dir.favicon.ico}" />
    </target>

    <target name="build-make-drupal" description="Build the Drupal core codebase.">
        <echo msg="Make Drupal core." />
        <drush command="make" assume="yes" bin="${toolkit.dir.bin.drush}" pipe="yes" verbose="${drush.verbose}" root="${build.${build-type}.dir}">
            <param>${profile.core.make}</param>
            <param>${build.${build-type}.dir}</param>
            <option name="no-patch-txt"></option>
        </drush>
    </target>

    <target name="build-make-profile" description="Makes single profile resources with drush.">
        <echo msg="Make the platform." />
        <phingcall target="drush-make-no-core">
            <property name="make-file" value="${profile.make}" />
            <property name="make-folder" value="${build.${build-type}.dir}" />
            <property name="make-destination" value="profiles/${profile}" />
        </phingcall>
    </target>

    <target name="build-make-profiles" description="Makes all profile resources with drush.">
        <foreach param="profile-name" absparam="dir-profile" target="build-make-profile">
            <fileset dir="${lib.dir.profiles}">
                <depth max="0" min="0" />
                <exclude name="common" />
                <type type="dir" />
            </fileset>
        </foreach>
    </target>

    <target name="build-type-dev" description="Sets the type of build (dev or dist).">
        <property name="build-type" value="platform" override="true" />
    </target>

    <target name="build-type-dist" description="Sets the type of build (dev or dist).">
        <property name="build-type" value="dist" override="true" />
    </target>

</project>
