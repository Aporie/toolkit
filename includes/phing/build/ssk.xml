<?xml version="1.0" encoding="UTF-8" ?>

<project default="help">

    <!-- Import helper targets if called here directly. -->
    <if>
         <available file="help.xml" />
         <then>
             <import file="help.xml" />
         </then>
     </if>

    <!-- Provide handy access with root symlink to starterkit binary. -->
    <target name="ssk-link-binary">
        <echo msg="Provide project with starterkit binary at root level." />
        <relsym link="${project.basedir}/ssk" target="${ssk.dir.bin}" overwrite="true"/>
    </target>

    <target 
        name="ssk-init"
        depends="
            ssk-link-binary,
            project-distro-version-set">
        <echo msg="Starterkit successfully initiated." />
    </target>

    <!-- Ask user if he or she wants to generate the source code structure. -->
    <target name="ssk-generate-structure">
        <if>
            <and>
                <not>
                    <available file="${lib.dir}" type="dir" />
                </not>
                <equals arg1="${project.basedir}" arg2="${ssk.dir}" />
            </and>
            <then>
                <phingcall target="ssk-copy-templates">
                    <property name="project-type" value="${project.type}" override="true" />
                </phingcall>
            </then>
            <elseif>
                <available file="${lib.dir}" type="dir" />
                <then>
                    <echo msg="Project structure exists already." />
                </then>
            </elseif>
            <else>
                <input propertyName="project-type" message="What type of project do you want to create?" validargs="profile,subsite" />
                <phingcall target="ssk-copy-templates">
                    <property name="project-type" value="${project-type}" override="true" />
                </phingcall>
            </else>
        </if>
    </target>

    <!-- Ensure needed files are present. -->
    <target name="ssk-copy-templates">
        <echo msg="Ensuring the presence of build.xml and Jenkinsfile." />
        <copy file="${ssk.dir.incl.phing.props}/main.props" tofile="${project.basedir}/build.properties.dist" overwrite="true" />
        <copy todir="${project.basedir}">
            <fileset dir="${ssk.dir.incl.templates}/${project-type}" />
        </copy>
        <echo msg="Project structure for ${project-type} created." />
    </target>

    <!-- Upgrade ssk 2.x to 3.x. -->
    <target name="ssk-upgrade">
        <if>
            <available file="${project.basedir}/build.package.xml" type="file" />
            <then>
                <input propertyName="ssk-upgrade" message="Subsite Starterkit 2.x detected. Do you wish to upgrade to 3.x?" validargs="y,n" />
                <if>
                    <equals arg1="${ssk-upgrade}" arg2="y" />
                    <then>
                        <!-- Delete starterkit folders. -->
                        <phingcall target="delete-folder">
                            <property name="folder.to.delete" value="${project.basedir}/bin" />
                        </phingcall>
                        <phingcall target="delete-folder">
                            <property name="folder.to.delete" value="${project.basedir}/docs" />
                        </phingcall>
                        <phingcall target="delete-folder">
                            <property name="folder.to.delete" value="${project.basedir}/src" />
                        </phingcall>
                        <phingcall target="delete-folder">
                            <property name="folder.to.delete" value="${resources.dir}/cloudformation" />
                        </phingcall>
                        <phingcall target="delete-folder">
                            <property name="folder.to.delete" value="${resources.dir}/codedeploy" />
                        </phingcall>
                        <phingcall target="delete-folder">
                            <property name="folder.to.delete" value="${resources.dir}/composer" />
                        </phingcall>
                        <!-- Delete starterkit files. -->
                        <delete>
                            <fileset dir="${project.basedir}">
                                <include name="CHANGELOG.md" />
                                <include name="LICENSE.md" />
                                <include name="README.md" />
                                <include name="appspec.yml" />
                                <include name="build.clone.xml" />
                                <include name="build.package.xml" />
                                <include name="build.properties.dist" />
                                <include name="build.test.xml" />
                                <include name="composer.lock" />
                                <include name="phpcs-ruleset.xml" />
                            </fileset>
                        </delete>
                        <!-- Move subsite resources to new location. -->
                        <move file="${resources.dir}/phpcs-custom.xml" tofile="phpcs-ruleset.xml" overwrite="true"/>
                        <move file="${resources.dir}/build.custom.xml" tofile="build.project.xml" overwrite="true"/>
                    </then>
                </if>
            </then>
        </if>
    </target>

</project>
