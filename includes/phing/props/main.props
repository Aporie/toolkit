# Binaries.
# ---------
project.bin.composer = composer.phar
project.bin.git = git

# Temporary folders and resources.
# --------------------------------
project.docroot = /var/www/html
project.tmp.devel.make = ${project.tmp.dir}/devel.make
project.tmp.dir = ${project.basedir}/.tmp

# Subsite configuration.
# ----------------------
project.id = myproject
project.install.modules = myproject_core
project.name = My Project
project.theme.default = ec_resp
project.type = subsite
project.url.production =

# Development modules.
# --------------------
devel.mdls.dir = devel
devel.mdls.dl = devel maillog stage_file_proxy
devel.mdls.en = devel context field_ui maillog simpletest stage_file_proxy views_ui

# Development variables.
# ----------------------
devel.vars.error_level = 2
devel.vars.stage_file_proxy_hotlink = 1
devel.vars.stage_file_proxy_origin = https://ec.europa.eu/${project.id}
devel.vars.stage_file_proxy_origin_dir = sites/${project.id}/files
devel.vars.views_show_additional_queries = 1
devel.vars.views_ui_show_performance_statistics = 1
devel.vars.views_ui_show_sql_query = 1

# Debugging configuration.
# ------------------------
drush.color = 1
drush.verbose = FALSE

# Curl progress type.
# -------------------
project.curl.progress =

# Docker. (TODO)
# -------
docker.project.id = environment

# Database download settings.
# ---------------------------
project.db.dl.filename =
project.db.dl.dir = fpfis/files-for/automate_dumps
project.db.dl.host = webgate.ec.europa.eu
project.db.dl.url = ${project.db.dl.host}/${project.db.dl.dir}/${project.id}/
project.db.dl.url.htaccess.password =
project.db.dl.url.htaccess.username =

# Database connection settings.
# -----------------------------
project.db.type = mysql
project.db.name = ${project.id}
project.db.user = root
project.db.password =
project.db.host = mysql
project.db.port = 3306
project.db.url = ${project.db.type}://${project.db.user}:${project.db.password}@${project.db.host}:${project.db.port}/${project.db.name}

# Solr configuration.
# -------------------
project.solr.enable = 1
project.solr.host = solr
project.solr.port = 8983
project.solr.type = d7_apachesolr
project.solr.scheme = http://
project.solr.url = ${project.solr.schem}://${project.solr.host}:${project.solr.port}/solr/${project.solr.type}

# Admin configuration.
# --------------------
project.admin.email = ${project.admin.username}@example.com
project.admin.password = pass
project.admin.username = admin

# Platform configuration. (deploy props?)
# -----------------------
project.profile = multisite_drupal_standard
project.profile.core = 7.x
project.profile.make = ${project.resources.dir}/${project.profile}.make
project.profile.package = deploy-package-${platform.package.reference}.tar.gz
project.profile.package.db.cache = 0
project.profile.package.provider = git-hub
project.profile.package.provider.token = # TODO: Github API limit.
project.profile.package.repository = ec-europa/platform-dev
project.profile.package.version = 2.4

# Theme configuration (deploy props?)
# --------------------
project.theme.ecl.version = v0.10.0
project.theme.ec_europa.version = 0.0.3
project.theme.atomium.repo.url = https://github.com/ec-europa/atomium.git
project.theme.atomium.repo.branch = 7.x-1.x
project.theme.europa.repo.url = https://github.com/ec-europa/ec_europa.git
project.theme.europa.repo.branch = master

# Project resources.
# ------------------
project.lib.dir = ${project.basedir}/lib
project.lib.dir.libraries = ${project.lib.dir}/libraries
project.lib.dir.modules = ${project.lib.dir}/modules
project.lib.dir.modules.custom = ${project.lib.dir.modules}/custom
project.lib.dir.modules.features = ${project.lib.dir.modules}/features
project.lib.dir.profiles = ${project.lib.dir}/profiles
project.lib.dir.profiles.profile = ${project.lib.dir.profiles}/${project.profile}
project.lib.dir.source = ${project.lib.dir}/src
project.lib.dir.themes = ${project.lib.dir}/themes

project.resources.dir = ${project.basedir}/resources
project.resources.dir.composer.json = ${project.resources.dir}/composer.json
project.resources.dir.composer.lock = ${project.resources.dir}/composer.lock
project.resources.dir.favicon.ico = ${project.resources.dir}/favicon.ico
project.resources.dir.site.make = ${project.resources.dir}/site.make

project.tests.dir = ${project.basedir}/tests

# Build folders.
# --------------
project.build.dev = build
project.build.dist = dist
project.build.site = ${project.id}

Build halts.
# ----------
project.build.haltonerror.dir.copy = true
project.build.haltonerror.props.validate = false

# Platform build resources.
# -------------------------
project.build.platform.dir = ${project.basedir}/${project.build.dev}
project.build.platform.dir.settings = ${project.build.platform.dir.sites}/default
project.build.platform.dir.sites = ${project.build.platform.dir}/sites
project.build.platform.dir.profile = ${project.build.platform.dir.profiles}/${project.profile}
project.build.platform.dir.profile.themes = ${project.build.platform.dir.profile}/themes
project.build.platform.dir.profiles = ${project.build.platform.dir}/profiles
project.build.platform.composer.json = ${project.build.platform.dir}/composer.json
project.build.platform.composer.lock = ${project.build.platform.dir}/composer.lock
project.build.platform.favicon.ico = ${project.build.platform.dir}/favicon.ico
project.build.platform.htaccess.append.text =

# Subsite build resources.
# ------------------------
project.build.subsite.composer.json = ${project.build.subsite.dir}/composer.json
project.build.subsite.composer.lock = ${project.build.subsite.dir}/composer.lock
project.build.subsite.dir = ${project.build.platform.dir.sites}/${project.build.site}
project.build.subsite.dir.files = ${project.build.subsite.dir}/files
project.build.subsite.dir.libraries = ${project.build.subsite.dir}/libraries
project.build.subsite.dir.modules = ${project.build.subsite.dir}/modules
project.build.subsite.dir.modules.contrib = ${project.build.subsite.dir.modules}/contrib
project.build.subsite.dir.modules.custom = ${project.build.subsite.dir.modules}/custom
project.build.subsite.dir.modules.features = ${project.build.subsite.dir.modules}/features
project.build.subsite.dir.source = ${project.build.subsite.dir}/src
project.build.subsite.dir.themes = ${project.build.subsite.dir}/themes
project.build.subsite.dir.tmp = ${project.build.subsite.dir}/tmp

# Distribution build files and directories.
# -----------------------------------------
project.build.dist.composer.json = ${project.build.dist.dir}/composer.json
project.build.dist.composer.lock = ${project.build.dist.dir}/composer.lock
project.build.dist.dir = ${project.basedir}/${project.build.dist}
project.build.dist.dir.modules = ${project.build.dist.dir}/modules
project.build.dist.dir.modules.custom = ${project.build.dist.dir.modules}/custom
project.build.dist.dir.modules.features = ${project.build.dist.dir.modules}/features
project.build.dist.dir.profile = ${project.build.dist.dir.profiles}/${project.profile}
project.build.dist.dir.profiles = ${project.build.dist.dir}/profiles
project.build.dist.dir.source = ${project.build.dist.dir}/src
project.build.dist.dir.themes = ${project.build.dist.dir}/themes

# Rebuild configuration.
# ----------------------
project.rebuild.auto = 1
project.rebuild.backup.destination = ${project.tmp.dir}/backup-site
project.rebuild.backup.files = ${project.build.subsite.dir}/settings.php
project.rebuild.backup.folders = ${project.build.subsite.dir.files};${project.build.subsite.dir.tmp}

# Shared paths.
# -------------
project.share.path = /tmp
project.share.name = share
project.share.path.global = ${project.share.path}/${project.share.name}
project.share.path.composer = ${project.share.path.global}/composer
project.share.path.platform = ${project.share.path.global}/platform
project.share.path.subsites = ${project.share.path.global}/subsites
project.share.path.composer.packages = ${project.share.path.composer}/packages
project.share.path.composer.packages.shared = ${project.share.path.composer.packages}/shared
project.share.path.platform.packages = ${project.share.path.platform}/packages
project.share.path.platform.packages.database = ${project.share.path.platform.packages}/database
project.share.path.platform.packages.deploy = ${project.share.path.platform.packages}/deploy
project.share.path.platform.packages.test = ${project.share.path.platform.packages}/test
project.share.path.subsites.packages = ${project.share.path.subsites}/packages
project.share.path.subsites.packages.database = ${project.share.path.subsites.packages}/database
project.share.path.subsites.packages.deploy = ${project.share.path.subsites.packages}/deploy
project.share.path.subsites.packages.test = ${project.share.path.subsites.packages}/test

# Composer hook phingcall target lists. Space separated only.
# -----------------------------------------------------------
composer.hook.post.install = ssk-init
composer.hook.post.update =
composer.hook.pre.install =
composer.hook.pre.update =

# Flickr configuration.
# ---------------------
project.flickr.key = foobar
project.flickr.secret = bas

# Integration configuration.
# --------------------------
integration.server.port = 8888

# Varnish configuration.
# ----------------------
varnish.server.port = 8888

# Drush Context configuration.
# ----------------------------
drush.db.dump = ${project.build.platform.dir}/dump.sql

